<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAMgAAADHCAIAAADTbIscAAAABGdBTUEAALGPC/xhBQAAABl0RVh0U29m
        dHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAABmASURBVHhe7Z15fFNV3ofvzdokTZo0e7eEQnf2XUAs
        iyyiwCiIirSuuKEiKrgvIAOKC/sOCYsssi+yS3QQFQXcFUrh6jjiPuOuiDP3Pbc5hl9vmiZNc5tz857n
        8/zxfj5nXvie3mc6bdpShkKhUCgUCoVCoVAoFAqFQpE5KiXjzVZ4s5XYLKgK64aqsS6oRtAZrtbrCDfN
        aw/TpqtDqx6aY9apFCzeHUSrYnIt8tCdgTeH0KQzFq8g+j9SD1QVf9zKf2zjP7LzHzr49538e27+3Sz+
        nWz+aA5/JJc/nMe/5eHf9PJv5POvN+dfa8EfLOBfLeQPFPGvFPMvl/CBUn5/S35fK35va35PG353W35X
        O35He/7FDvz2jvy2zvyWLvzmrvym8/iN3fgN3fn1PfgXzufX9uTXlPOre/GrevMr+/Ar+vLLL+SX9eP9
        /fmlA/glF/GLB/GLLuYXXMLPH8zPG8LPHcpN7I/ywruDdMtnv/i7PHzzXrw5RMdK5sk/sVP/ZCZ+z0yo
        ZkbvZ65axfSbyLQbyWS1YVRp+D8sO2hYTWQdYVUw086KfSron9ipvzFjDzNDZzJtRzAGG/5/lAU0rCYy
        PKxOFcyzZ5ln6vLpCN7+KtP3AcbWHP8JJEPDaiLDw+pcwUz/A/tcBJ8N96zgXa8zPW5ldGb8RxEIDauJ
        DA+rSwUz84zYGUH/EBtKEDrtR+byOYy7DP+BRBEe1oFlVv8ks3+Sxf94puBjVv+jSJv/Ybv/YYf/Iafg
        gy7/Ay7//W7/fVmCE3L843P89+YK3pPnv9vjH4f0+u9q5h+b77+zuf8OZAv/7cgC/5hC/22F/luL/LcU
        +28p8d9c4r+p1D+6TPDGlv4bWvmvR7ZeNbrdd9P7Nzis1+5mZwwjwurHag0LD6trBTP7TN3OiqCowpA3
        rGOy2+A/lhDCw7pmiA6fJRWzXv32Iz0bHNb0Yfgo2aCSag0LD+u8Ucy83885ty7nhHtGUBRi0OtXMXZi
        PvyiYUlE9LC6jWIW/CZ2fsjfawkTDDcU4uyfmaFPMFoCXhijYUlETGEt+i2iCyMoClFkMMop1Uyri/Df
        kixoWBIRPazuo5ilvzJL6nVxuL8JiioUGUzwmoWMPuzl/iaDhiUR0cPqcTXj/6UOfUF/rSVKsE5FIYqc
        +jFT0A3/dU0MDUsiood1/tXM8l8iuiyCogpF4ihBl0t+YAbcif/GpoSGJRHRw+p5NfP8z4Ir63VFuL8I
        ikIUKcrxpiWMumm/7EjDkojoYV0wkln90zlXhfvzOYMJhiuqUCTM8dH9TIYT/9VNAA1LIqKHVT6SWftT
        Ha6pV9gitJ4oQ11OO8JkFeK/XWpoWBIRPaxeI5n1Pwquq9cXwv1JUJRjUFGFIlF/86qbqC0alkRED6v3
        SGbjD7XcIPLHWgYrDFcUokhxlD8yC08w2dK3RcOSiJjC2vxDHW6qV1GLIcVRIiNHuVj6tmhYEhE9rD5X
        Mdu+x26tyy31GJZjSFGIIkMhLq1iyrrjJVJAw5KI6GH1vYp58T91uz2C26D1RhlSXORfbv6eWX6SKe2K
        xyQcGpZERA/rwquYnf+O4H+wO+pSVGG4ohyD1ooSWRPlkvcYdz7ek1hoWBIRPax+V7J7/o3dXa+7zslA
        xTmGjBwlUlThUzsZvRFPSiA0LImIHlb/K9l934ndW697RMYQJbLOLmGIY2cyrAKvShQ0LImIHtaAK9nA
        t+z+SH4n+FIERTkGFVUoss4og13u+pbpPxKvShQ0LImIHtbAK9hXvmFf+Vbw5WiiBMMVtxiyJspIXYpy
        DLr5FOMpwsMSAg1LImIK68A3Yv9Rr0KI0Jooo3YpyjGkKMfp2xiNFm9rPDQsiYge1qAr2Ne+Zg9G8NVv
        6lOUY1BRheHW2SVIkBl2M97WeGhYEhFTWG98xb7xNfb1ukTl1aOoxZCv1tulKMeQqLwd1Yw7F89rJDQs
        iYge1sVXsG9+JfZQNIUWoZGjRIpCFCnKMejjC/C8RkLDkojoYV0ygj3yJXs4gm8hv4qoKMeQogpF1hml
        qMtXTzPtE/GlHhqWREQPa/AI9u0vavxS8GgEUXz1KMoxaP1RIkU5Bg31N2cDo1ThkXFDw5KI6GENGcG+
        +4XYdyKIEww30VEiD51mygfikXFDw5KI6GENHcF+cFrw/bp8D/lFHYpCFCnKMai4RWiELhdvZhSNey2e
        hiUR0cP62+XsR5/XeFrwwwgG44ukKMeQdXYpqlAkbPHo50yHxn3jAw1LImIK69jndfhxXeIE6zRyl6IK
        wxXlGDQY5TOL8M74oGFJRPSwLr2crfpXRI8H/VysqEKRohxDilsMGTnKoxzjaMRP9dCwJCJ6WJcNZ09+
        9pf/EqyuyxMRFIUoMo4okbVzZG4cg6fGAQ1LIqKHNWw4y31Wh6cieK5CkZGjRIpyDCqqUGToneWL++P/
        EJ6GJRHRwxo+nP30n/X5CfIzsaIKwxXlGFTcYsiaKCO/s2RK4v3nAmlYEhE9rMuHs//6VPAz5D8j+s8I
        iioUKUTZ8C5FOSLvHo/XNhQalkRED2vEcPb0p7X8vF6DFYYrClGkKMegogrDDUW5fQde21BoWBIRPawr
        hrFfflKfXwT9VKwox6CiCkWKWgwZ9Z3lqVOMM67PDWlYEhFTWN9w2K8/qc+v6lJUYbixR4kUhQhkhgzG
        gxsEDUsiood15TD2W64BhioU+XW9XYpyDCmqUCR8Zzn1CTy4QdCwJCLxYTVSUY5B648SiRLcux0PbhA0
        LIkgLqy4PV3FaNR4c+zQsCQidcL6lmPKivHm2KFhSURKhXXZELw5dmhYEpFSYd17B94cOzQsiUilsNiZ
        T+HNsUPDkoiUCmv9Crw5dsLD+niLPbDEGlhsCyy0BxY6AgscgfnOwDxXYK47MCcrMDs7MDsnMCsnMDM3
        MCMvMN0TeM4TeLZZ4Jn8wNP5gWnNA9NaBJ4qCExFFgamFAX+XhyYXBJ4ojQwqSwwEdky8HirwKOtBR9p
        G3i4XeChdoEH2wce6BC4v6PgfZ0C4zsHxnc5MOG8n2YPaHBY797PbriBCD+ZWGuYrMM6sBtvjp3wsOjv
        K5REWYf1zkG8OXZoWE2krMM6XYU3xw4Nq4mUdVjoE8OGQsNqIv+/hZXjUnD7Ldw+C7c3k9tj5XbbuF0O
        bqeT2+Hitru4bW5uaxa3NZvbksNtyuM2ergNHm69l1vXjFuXz61tzq1pwa0u4FYVciuLuJXF3IoSbnkp
        t6yM87XklrbiliDbcIvacgvbcQvac/M7cPM6cnM7cnM6cbM7c7O6cjPP42Z0457rLvhsD+6Z87mne3JP
        XcA92Yub2lvw7324yX25Jy7kJvU7MK5njrn2Z6wdctEDk4dbRuPNIQYPZI8ekIt4c+yolMI7LW+2EpsF
        VWHdUDXWBdUIOsPVeh3hpnntYdp0dWjVQ1FVKgWLdwfRqphcizx0h/3qQIOeycuRjRQKhUKhUCiU5JPG
        MD1Zedi5Zi3EbGLLO6uxnTTYjtpzdkjDtkfqBNsh9YJtgxoE2yDTBVsHNZa3Cmkqbxk0o7wsqLm8NKSl
        vCRoZnnxXxZZz1loC9q1WSYe/RdO+bzlkQ3GwzC/KVlZeEzJorUQ1BN/DLwI94GTf8+FX4R7O4c/Cl6E
        O9SMfz0/wotwZfxLLfl94EW4naEX4TrxW7vwW0QvwvXk115w7kW454MvwvXjl/Xn/QN438BzL8ItDL4I
        N5Sf+zduYn88+i9GsbJ5yyPx6NjxoOupWVl4TMWitRB5h6WQzVseiUfHjhCWViELj2kUKRUWek8Qdkdi
        xaNjRwhLp5SFx9KUqRZW2B3J9BudEo+OHY+C/T1dJQuP65VoLd5dg7zDUitEFyRW9JbHo2NHCMukgu43
        KBfpFEnXr1OeNtYadjw9elgnttt9E82+iRbf4xbfY5m+R62Cj9h8D9t9D9l9Dzp8Dzp9D7gE73P77svy
        Tcjyjc8WvDfXd0+u7+48390e3ziP7y6vbyyyme/OfN8dzX23t/CNQRb4bivw3VrkuwVZ7Lu5RPCmUt/o
        Ut+NLX03IFv5rm/tu66179o2P80aED0scDuSPWiILyyzGjpKk+jfMBYXZpY5hMICw46bVFHD8k0K+5Jc
        kuCm9I4SlkYBb0eymwwN/9e5hbAyNdBRcXykJgFCWBlqOOy4WZ1SYWkV8HYkOzuesJTs73YtdFRaw9/v
        SYAQlkUDhx3P1KC1+LgGeYeVpoS3I9m74vkYC4XlTIOOiuNTAAkws+whqwYOO27TplRYOiW8HckOjufl
        BhSWOw1KSlgK9pBNA4cdd6RcWOB2JNtcVevNHhMeFft7jg46Ko5PASRACMuphcOOu9LQWnxcg7zDMijh
        7Yj122xdPL9YBz2qM3l6aEUcH6lJAArrTVcaHFaVpUulsNDbGd6OWPc5RV/6jw0hLK8BWpFOTFhZOjis
        KkefUmGlq+DtiHWyRYMXNwghrHwDtMJITFg5OjisKi+1wjKq4O2ItV8cnxIiPGrFmYJ0aIWp4f/KlgQI
        YaF3xWBYlVeP1uLjGuQdlkkNb0emP7VIN4l+gCVGhLCKjNCKDGLCQu+KwbCqfENKhZWhhrcj0725tX+Q
        M3aEsEpN0AozGWEp2TfRu2IwrKogPaXCMqvh7cj09sy4PsBCeDSKMy0zoBXxfbCWaISwWqTDYVWFRrQW
        H9cg77AsGng7Av2lLCO39n+TG4AQVmszlKCwCoxwWFWxKdXCArcj0P3N0/HWOECP6o+2ZmhF3O/9EgoK
        660iIxx2ojS1wsrUwNsR6HXWRpQghNXeAq1ozB+XOISwSkxw2ImWGSkVllUDb0eaX7cxo0eAt8aBR6v4
        o1MmtMKmxWdJRQirLAMOO9HajNbi4xrkHZZNC29HmtM98X4+GEQIq4sVWmEnJqxWGXDYibaWlArLroW3
        I8pfO1uLGvndU0JY3azQCgcZYanYt9pkwGEnOqRWWA4tvB1Rri8y4pVx40lT/tHDBq2I74uOiUYIq50Z
        DjvR0YLW4uMa5B2WMw3ejhx/7W7r0PivFwth9bRDCQoLfRQJhp3onJlqYYHbkeOaUhOe2BiEsMod0AoX
        MWF1zITDTnS1plRYrjR4O0L8/nx7UXxfdRaBHtXZPk5ohZuMXyCgYg93tsJh1d1tKRWWWwdvR4hTWjTi
        RVGIR6c8e6ETWpFFTFhdrXBYdQ8bWouPa5B3WFk6eDsSRG9h9GbH+xqJEFZ/F7Qim5CwFIe7WeGw6p72
        lAorWwdvl3TP9HNdksAXBISwBrqhpISlVhzuboPDqssdqRYWuF3SXdLaHN93XtWNENagLGhFTuNeck0Q
        Qljn2+Gw6t7OlAorRw9vl1yrejkdif0JeI9eeXZwFrQi7u/tSihCWBfY4bDqvk60Fh/XIO+wcvXwdkn0
        h0HuXgn/Op4Q1tBsaEUeMWH1csBh1f1cKRVWnh7eLlmeGZI9vrDRr7OH49Grzl6WA63wGPBZUhHCQp8A
        g2HVA1FYtV4RlndYHgO8XbJc2TlTk8iPrf7CY1CdHZ4LrfASE9aFLjis+iI3WouPa5B3WF4DvF1SfLmX
        A2WFByUWr0H154g8aGUzUsI60t8Fh1VfnIXW4uMaZB0WejvD2zW9Hwx0id6eiUQI68o8aGU+GWFpFEcG
        uOCw6sGpFVa+Ad6uiUVvzDaSfg+6N13159UeaGVjvtM5cQhhDXLDYdVDs9FafFyDvMNqng5v15R+OTy3
        i9TfzimEVeGFEhTWxVlwWPWlOakWFrhdk/nliNw+TfDlYCGsa5tBKwuICWtINhxWPTw3pcIqSIe3axqr
        h+V2dzTJd68IYV2fD60skOBVjYYjhDU0Bw6rHpGXWmEZ4e2awI+G5bRpsh/B8hpVf96YD62U4uWyhiOE
        dWkOHFZ9RR5ai49rkHdYhUZ4O6k9OCQ739iEP+MuhHVTc2hl47/fOREIYQ3LgcOqr/KkVFhFRng76fxj
        dPOVfZy2Rv5wREPxGtX/vaUFtLI4Ed+Z2mjMWsWR4blw2MmrUVi1/jsn77CKTfB2EvnDDfmPdsrUJ+q7
        rGLHa1L/d0wBtLKEmLCuyIPDTlZ40Vp8XIO8wyoxwdtJ4fGrvYO8Bim+YBMdIaw7CqAEhXVlHhx28pqU
        CwvcLrH+dluL5we4RG+uJkUIa2whtDIhP6TRaISwRnrgsJPXNUupsEpN8HYJ9MS1za4sMmoa8wPyjUcI
        6+4iaGUZEc9GCGuUFw47eWN+SoVVlgFvlxC/G1Mwp48zj4R/7NObof7vvcXQypaEhKU8UumFw06Obo7W
        4uMa5B1Wywx4u0b6y11FG4dmd3XrkvMRVThCWBNKoK+M9Cy9KCvprrwk+5s7C+Gwkze3iBqWjH77V2Wr
        DHi7uP3hrqIdw3P7NzOkNf2nfvUghPVAiSw8eVv0sGT0+worW2eILthQv7izYOXg7B45erKSCuI1q//3
        UKksPDWmAK3Fu2uQdVjXtDGLLhijP08ofuPaZvd1s5XatKT8D184QliPlMnCU3cUplpYYXesx2/vLX7j
        +vxJvRzdcvQmMn71X314zZr/PdZSFp4ai8Kq9TVUeYfV1iK6oMhfHyp7c3TzWRdlje1qHVpsbO1M08f9
        T802PTkm9alxhbLwH9fno7V4dw1d26q4lyzcPgu3N5PbY+V227hddm6nk9vh4l50cdvd3NYsbms2tyWH
        25zLbczjNni49V5uXTNuXT63tjm3pgW3uoBbVcg9X8itLOZWlHDLS7llZZy/Jbe0FbcE2Zpb3JZb1I5b
        0J6b34Gb15Gb25Gb05mb3YWb1ZWbeR43oxs3vTv3XHfu2fO5Z3pyT1/ATSvnnuzFTe0tOKUPN7kv90Q/
        blL/A+N64tF/MazMFLraazfmB65rtmJYzrT+rrHnWYeWmIptWhW5/ztHoVAoFAqFQqFQUgcVo81hu8hC
        N9sWrcW7KYRjYrPHqapk4Q3KAFqLd1MIJ4PNvld9XBaOVu1Ha/FuCuGgRzVBfUwW3qx6iYYlG9Cjul/z
        sSy8Vb2PhiUbzGz2Q5qPZOEY9V60Fu+mEA56VI9oPoRerpp5gfK2pNtHOe4u9Stw2B3qPTQs2YAe1WPa
        D6FtlUPxWVJJY4w3azbAYWM1NCz5gB7VRO0H0HbEhHWrZj0cNk6zm4YlGyxs1mTt+9D2yiH4LKmgsMZo
        1sFh92h2o7X4mEI46FFNSXsP2oGQsFjjHZoX4LDx2l00LNmAHtVTae9CO5IRlo41jtW8AIfdr91Jw5IN
        mWzW07p3oJ2Ug/FZUkFhjdOuhcMeSNuB1uJjCuGgR/Wc7m1oZ2LCuke7Bg57OO1FGpZsQI9qhu4otAsx
        YY3XrobDHk3bTsOSDehRzdIfhXZRkRLWhLTVcNjjOhqWfLCyWXP1R6BdVZfgs6SCwnogbRUcNkm3Da3F
        xxTCQY9qvuEw9DwywtKzxgd1q+CwyfqtNCzZYGXdCw1vQbupLsZnSQWF9bDueThsihCWGx9TCMfGuhcb
        3oR2JyasR3Ur4bCp+i1oLT6mEI5N4falH4L2UJMS1uP6FXDYNP1mtBYfUwgHPapl6Yeg5xMT1iT9Cjjs
        GRqWjLAr3CvT34D2VA/CZ0kFhTVZvxwOe06/Ca3FxxTCQY9qlfF1KDFhpU8xLIfDZhg20rBkA3pUa42v
        QcvJCMvApj9pWAaHzTZsoGHJBvSo1pkOQsvVF+GzpILCmmbww2Fz09fTsGSDQ+HeYHoV2ouYsJ42+OCw
        eenr0Fp8TCEc9Kg2mV6F9iYmrGcNPjhsAQ1LRjgUrq0ZB6B9NAPxWVJBYU1PXwqHLTaisFz4mEI4ToVr
        e8Y/oH2JCWtm+hI4bInxBbQWH1MIBz2qHeZXoBcSE9Zs4xI4zGdaS8OSDehR7Ta/DO2nGYDPkko6mz7X
        uBgOW25aQ8OSDehR7TUHoOSENd+4CA5baVpNw5INLoVrv2U/dAAxYS00LYTDVmWsQmvxMYVw0KN62fIS
        dIBG/E/dJwUU1mLTAjhsTcbzNCzZgB7VActL0IHEhLXUtAAOW0fDkhFuhetg5j7oRVpSwvJnLIDD1ptX
        orX4mEI4boXz9cy90EHafvgsqaCwlmfMh8M2CmE58TGFcNCjOmTdA72YjLCMbPqKjHlw2GbLChqWbMhS
        OA9bd0MvISasVRlz4bCtluVoLT6mEA56VEetu6CDtRfis6SCwlqdMQcO225ZRsOSDVlK5zu2ndDBaYSE
        ZVhrngOH7bD40Vp8TCEc9Kjet+2EDiEmrHXmOXDYbhqWjMhWOj+074AOJSasDZbZcNieTB9ai48phIMe
        1TH7i9C/pfXFZ0nFxBo2WWbBYS9lLqVhyQb0qKrs26GXEhPWFstMOCyQuYSGJRtylI5qxzboZWl98FlS
        QWFty5wBh71sXYLW4mMK4aBHxTm2QocRE9aLmdPhsAPWxTQs2YAe1aeOLdDhxIS1M3M6HHbQuoiGJRvQ
        o/rMuQU6XEdKWLus0+Gw1200LPmQq3R87twMvVzXG58lFRTWHutzcNgbtoVoLT6mEA56VF+6NkFHkBFW
        hsKwz/osHPaWfQENSzagR/W1ayP0oG3WlsxJSXd75mTOuQoOO2KfT8OSDXlKx3euDbLwbfs8tBbvphAO
        elT/ca+Xhe865tKwZEOe0v6je50s/EAIy453UwjHo7T/7F4nCz90zEVr8W4K4aBH9WvWC7LwY+ccGhaF
        QqFQKBQKhUKhUCgUSurCMP8H3GNoXA+wpfEAAAAASUVORK5CYII=
</value>
  </data>
</root>